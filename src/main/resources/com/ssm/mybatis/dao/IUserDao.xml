<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssm.mybatis.dao.IUserDao">

    <!-- java类中的属性映射数据库表中的字段，使用resultMap时resultType="com.ssm.mybatis.bean.User必须换成resultMap="userMap"-->
    <resultMap id="userMap" type="com.ssm.mybatis.bean.User">
        <!-- 主键字段的对应 -->
        <id property="id" column="id"/>
        <!-- 非主键字段的对应 -->
        <result property="username" column="username"/>
        <result property="birthday" column="birthday"/>
        <result property="sex" column="sex"/>
        <result property="address" column="address"/>
    </resultMap>

    <!-- 查询所有用户，id为dao层用户接口的方法名-->
    <select id="findAll" resultMap="userMap">
        select * from user;
    </select>

    <!-- 保存用户 -->
    <insert id="insert" parameterType="com.ssm.mybatis.bean.User">
        <selectKey keyProperty="id" keyColumn="id" order="AFTER" resultType="Integer">
            select last_insert_id();
        </selectKey>
        insert into user(username,birthday,sex,address) values(#{username},#{birthday},#{sex},#{address});
    </insert>

    <!-- 修改用户 -->
    <update id="update" parameterType="com.ssm.mybatis.bean.User">
        update user set username=#{username},birthday=#{birthday},sex=#{sex},address=#{address} where id=#{id};
    </update>

    <!-- 删除用户 -->
    <delete id="delete" parameterType="Integer">
        delete from user where id=#{id};
    </delete>

    <!-- 根据id查询单个用户 -->
    <select id="selectOneById" resultMap="userMap" parameterType="Integer">
        select * from user where id=#{id};
    </select>

    <!-- 根据姓名模糊查询用户 -->
    <select id="findByName" resultMap="userMap" parameterType="String">
        select * from user where username like #{username};
        <!-- select * from user where username like '%${value}%'; (容易sql注入)-->
    </select>
</mapper>