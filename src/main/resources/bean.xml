<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!--spring对bean的管理细节：
    1.创建bean的三种方式:
        第一种方式：使用默认构造方法创建 如果类中没有默认构造方法，则无法创建对象
            把对象的创建权交给Spring Ioc来管理 ,id和class对应key,value
            bean id="daoService" class="com.ssm.spring.dao.impl.AccountDaoImpl" />
            <bean id="accountService" class="com.ssm.spring.service.impl.AccountServiceImpl"/>
        第二种方式：使用工厂中的方法创建对象（使用某个类中的方法创建对象，并存入spring中）
            AccountServiceImpl accountService = instanceFactory.getAccountService
            <bean id="instanceFactory" class="com.ssm.spring.factory.InstanceFactory"/>
            <bean id="accountService" factory-bean="instanceFactory" factory-method="getAccountService"/>
        第三种方式：使用工厂中的静态方法创建对象（使用某个类中的静态方法创建对象，并存入spring中)
            AccountServiceImpl accountService = InstanceFactory.getAccountService
            <bean id="accountService" class="com.ssm.spring.factory.InstanceFactory" factory-method="getAccountService"/>
    2.bean对象的作用范围：
        scope属性： singleton  单例
        prototype 多例
    3.bean对象的生命周期
        单例对象：
        出生：随容器的创建而出生
        活着：容器在，对象在
        死亡：容器亡，对象亡
        多例对象：
        出生：当我们使用对象时，spring为我们创建
        活着：对象只要在使用过程中就一直活着
        死亡：当对象长期不使用，并且没有别的对象引用时，就会被java垃圾回收器回收
    -->
    <!-- spring中的依赖注入
        依赖注入：
            Dependency Injection
            能注入的数据，有三类：
                1. 基本数据类型和String
                2. 其他bean类型（配置文件或者注解中配置过的bean）
                3. 复杂类型/集合类型
            注入的方式，有三种：
                1. 构造函数：必须有无参的构造方法
                2. set方法：提供set方法
                3. 注解
    -->

    <!-- 构造函数注入 -->
    <!--    <bean id="accountService" class="com.ssm.spring.service.impl.AccountServiceImpl">
            <constructor-arg name="name" value="jone"/>
            <constructor-arg name="age" value="18"/>
            <constructor-arg name="birthday" ref="now"/>
            </bean>
     -->

    <!-- set方式注入 -->
    <bean id="accountService" class="com.ssm.spring.service.impl.AccountServiceImpl">
        <property name="name" value="jone"/>
        <property name="age" value="18"/>
        <property name="birthday" ref="now"/>
        <property name="strs" >
            <array>
                <value>a</value>
                <value>b</value>
                <value>c</value>
            </array>
        </property>
        <property name="myList">
            <list>
                <value>1</value>
                <value>2</value>
                <value>3</value>
            </list>
        </property>
        <property name="mySet">
            <set>
                <value>aa</value>
                <value>bb</value>
                <value>cc</value>
                <value>aa</value>
            </set>
        </property>
        <property name="myMap">
            <map>
                <entry key="1">
                    <value>a</value>
                </entry>
                <entry key="2">
                    <value>b</value>
                </entry>
                <entry key="3" value="c"/>
                <entry key="4" value="d"/>
            </map>
        </property>
        <property name="myProps">
            <props>
                <prop key="3">a</prop>
                <prop key="2">b</prop>
                <prop key="1">c</prop>
            </props>
        </property>
    </bean>

    <!-- 其他bean类型 -->
    <bean id="now" class="java.util.Date"/>

</beans>
